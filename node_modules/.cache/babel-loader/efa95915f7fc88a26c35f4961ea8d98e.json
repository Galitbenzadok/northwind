{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\northwind\\\\src\\\\Components\\\\ProductsArea\\\\AddProduct\\\\AddProduct.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport config from \"../../../Utils/Config\";\nimport \"./AddProduct.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddProduct() {\n  _s();\n\n  var _formState$errors$nam, _formState$errors$pri, _formState$errors$sto;\n\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm();\n  const navigate = useNavigate();\n\n  async function submit(product) {\n    try {\n      // Convert out product to FormData:\n      const formData = new FormData();\n      formData.append(\"name\", product.name);\n      formData.append(\"price\", product.price.toString());\n      formData.append(\"stock\", product.stock.toString());\n      formData.append(\"image\", product.image.item(0)); // Post the new product to the server: \n\n      const response = await axios.post(config.productsUrl, formData);\n      const addedProduct = response.data;\n      alert(\"Product has been added!\"); // Navigate back to all products: \n\n      navigate(\"/products\");\n    } catch (err) {\n      alert(err.message);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddProduct Box\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submit),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"name\", {\n          required: {\n            value: true,\n            message: \"Missing product name\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_formState$errors$nam = formState.errors.name) === null || _formState$errors$nam === void 0 ? void 0 : _formState$errors$nam.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        ...register(\"price\", {\n          required: {\n            value: true,\n            message: \"Missing price\"\n          },\n          min: {\n            value: 0,\n            message: \"Price can't be negative\"\n          },\n          max: {\n            value: 1000,\n            message: \"Price can't exceed 1000\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_formState$errors$pri = formState.errors.price) === null || _formState$errors$pri === void 0 ? void 0 : _formState$errors$pri.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Stock: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ...register(\"stock\", {\n          required: {\n            value: true,\n            message: \"Missing stock\"\n          },\n          min: {\n            value: 0,\n            message: \"Stock can't be negative\"\n          },\n          max: {\n            value: 1000,\n            message: \"Stock can't exceed 1000\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_formState$errors$sto = formState.errors.stock) === null || _formState$errors$sto === void 0 ? void 0 : _formState$errors$sto.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Image: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        ...register(\"image\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddProduct, \"CFNJTGuHtuW8p7IAL8RVx7+bSLw=\", false, function () {\n  return [useForm, useNavigate];\n});\n\n_c = AddProduct;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["D:/React/northwind/src/Components/ProductsArea/AddProduct/AddProduct.tsx"],"names":["axios","useForm","useNavigate","config","AddProduct","register","handleSubmit","formState","navigate","submit","product","formData","FormData","append","name","price","toString","stock","image","item","response","post","productsUrl","addedProduct","data","alert","err","message","required","value","errors","min","max"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport ProductModel from \"../../../Models/ProductModel\";\nimport config from \"../../../Utils/Config\";\nimport \"./AddProduct.css\";\n\nfunction AddProduct(): JSX.Element {\n\n    const { register, handleSubmit, formState } = useForm<ProductModel>();\n\n    const navigate = useNavigate();\n\n    async function submit(product: ProductModel) {\n        try {\n\n            // Convert out product to FormData:\n            const formData = new FormData();\n            formData.append(\"name\", product.name);\n            formData.append(\"price\", product.price.toString());\n            formData.append(\"stock\", product.stock.toString());\n            formData.append(\"image\", product.image.item(0));\n\n            // Post the new product to the server: \n            const response = await axios.post<ProductModel>(config.productsUrl, formData);\n            const addedProduct = response.data;\n            alert(\"Product has been added!\");\n\n            // Navigate back to all products: \n            navigate(\"/products\");\n        }\n        catch (err: any) {\n            alert(err.message);\n        }\n    }\n\n    return (\n        <div className=\"AddProduct Box\">\n\n            <form onSubmit={handleSubmit(submit)}>\n\n                <h2>Add Product</h2>\n\n                <label>Name: </label>\n                <input type=\"text\" {...register(\"name\", {\n                    required: { value: true, message: \"Missing product name\" }\n                })} />\n                <span>{formState.errors.name?.message}</span>\n\n                <label>Price: </label>\n                <input type=\"number\" step=\"0.01\" {...register(\"price\", {\n                    required: { value: true, message: \"Missing price\" },\n                    min: { value: 0, message: \"Price can't be negative\" },\n                    max: { value: 1000, message: \"Price can't exceed 1000\" },\n                })} />\n                <span>{formState.errors.price?.message}</span>\n\n                <label>Stock: </label>\n                <input type=\"number\" {...register(\"stock\", {\n                    required: { value: true, message: \"Missing stock\" },\n                    min: { value: 0, message: \"Stock can't be negative\" },\n                    max: { value: 1000, message: \"Stock can't exceed 1000\" },\n                })} />\n                <span>{formState.errors.stock?.message}</span>\n\n                <label>Image: </label>\n                <input type=\"file\" accept=\"image/*\" {...register(\"image\")} />\n\n                <button>Add</button>\n\n            </form>\n\n        </div>\n    );\n}\n\nexport default AddProduct;\n"]},"metadata":{},"sourceType":"module"}