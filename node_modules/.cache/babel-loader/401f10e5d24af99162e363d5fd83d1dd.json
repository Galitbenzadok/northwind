{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\northwind\\\\src\\\\Components\\\\ProductsArea\\\\UpdateProduct\\\\UpdateProduct.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport productsService from \"../../../Services/ProductsService\";\nimport \"./UpdateProduct.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateProduct() {\n  _s();\n\n  var _formState$errors$nam, _formState$errors$pri, _formState$errors$sto;\n\n  const params = useParams();\n  const id = +params.id;\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState,\n    setValue\n  } = useForm();\n  useEffect(() => {\n    productsService.getOneProduct(id).then(product => {\n      setValue(\"name\", product.name);\n      setValue(\"price\", product.price);\n      setValue(\"stock\", product.stock);\n    }).catch(err => alert(err.message));\n  }, []);\n\n  async function submit(product) {\n    try {\n      product.id = id;\n      await productsService.updateProduct(product);\n      alert(\"Product has been updated!\"); // Navigate back to all products: \n\n      navigate(\"/products\");\n    } catch (err) {\n      alert(err.message);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UpdateProduct Box\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submit),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"name\", {\n          required: {\n            value: true,\n            message: \"Missing product name\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_formState$errors$nam = formState.errors.name) === null || _formState$errors$nam === void 0 ? void 0 : _formState$errors$nam.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        ...register(\"price\", {\n          required: {\n            value: true,\n            message: \"Missing price\"\n          },\n          min: {\n            value: 0,\n            message: \"Price can't be negative\"\n          },\n          max: {\n            value: 1000,\n            message: \"Price can't exceed 1000\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_formState$errors$pri = formState.errors.price) === null || _formState$errors$pri === void 0 ? void 0 : _formState$errors$pri.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Stock: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ...register(\"stock\", {\n          required: {\n            value: true,\n            message: \"Missing stock\"\n          },\n          min: {\n            value: 0,\n            message: \"Stock can't be negative\"\n          },\n          max: {\n            value: 1000,\n            message: \"Stock can't exceed 1000\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_formState$errors$sto = formState.errors.stock) === null || _formState$errors$sto === void 0 ? void 0 : _formState$errors$sto.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Image: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        ...register(\"image\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateProduct, \"rQC0byDofFdJDI8Wd6S4i0RQh9k=\", false, function () {\n  return [useParams, useNavigate, useForm];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["D:/React/northwind/src/Components/ProductsArea/UpdateProduct/UpdateProduct.tsx"],"names":["useEffect","useForm","useNavigate","useParams","productsService","UpdateProduct","params","id","navigate","register","handleSubmit","formState","setValue","getOneProduct","then","product","name","price","stock","catch","err","alert","message","submit","updateProduct","required","value","errors","min","max"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ProductModel from \"../../../Models/ProductModel\";\nimport productsService from \"../../../Services/ProductsService\";\nimport \"./UpdateProduct.css\";\n\nfunction UpdateProduct(): JSX.Element {\n\n    const params = useParams();\n    const id = +params.id;\n\n    const navigate = useNavigate();\n\n    const { register, handleSubmit, formState, setValue } = useForm<ProductModel>();\n\n    useEffect(() => {\n        productsService.getOneProduct(id)\n            .then(product => {\n                setValue(\"name\", product.name);\n                setValue(\"price\", product.price);\n                setValue(\"stock\", product.stock);\n            })\n            .catch(err => alert(err.message));\n    }, []);\n\n    async function submit(product: ProductModel) {\n        try {\n\n            product.id = id;\n            await productsService.updateProduct(product);\n            \n            alert(\"Product has been updated!\");\n\n            // Navigate back to all products: \n            navigate(\"/products\");\n        }\n        catch (err: any) {\n            alert(err.message);\n        }\n    }\n\n    return (\n        <div className=\"UpdateProduct Box\">\n\n\t\t\t<form onSubmit={handleSubmit(submit)}>\n\n                <h2>Edit Product</h2>\n\n                <label>Name: </label>\n                <input type=\"text\" {...register(\"name\", {\n                    required: { value: true, message: \"Missing product name\" }\n                })} />\n                <span>{formState.errors.name?.message}</span>\n\n                <label>Price: </label>\n                <input type=\"number\" step=\"0.01\" {...register(\"price\", {\n                    required: { value: true, message: \"Missing price\" },\n                    min: { value: 0, message: \"Price can't be negative\" },\n                    max: { value: 1000, message: \"Price can't exceed 1000\" },\n                })} />\n                <span>{formState.errors.price?.message}</span>\n\n                <label>Stock: </label>\n                <input type=\"number\" {...register(\"stock\", {\n                    required: { value: true, message: \"Missing stock\" },\n                    min: { value: 0, message: \"Stock can't be negative\" },\n                    max: { value: 1000, message: \"Stock can't exceed 1000\" },\n                })} />\n                <span>{formState.errors.stock?.message}</span>\n\n                <label>Image: </label>\n                <input type=\"file\" accept=\"image/*\" {...register(\"image\")} />\n\n                <button>Update</button>\n\n            </form>\n\n        </div>\n    );\n}\n\nexport default UpdateProduct;\n"]},"metadata":{},"sourceType":"module"}